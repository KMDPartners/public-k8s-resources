---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: agents.components.upwind.io
spec:
  group: components.upwind.io
  names:
    categories:
    - upwind
    kind: Agent
    listKind: AgentList
    plural: agents
    shortNames:
    - agent
    - ag
    singular: agent
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.version
      name: DesiredVersion
      type: string
    - jsonPath: .status.installedVersion
      name: InstalledVersion
      type: string
    - jsonPath: .status.installedAppVersion
      name: AppVersion
      type: string
    - jsonPath: .spec.interval
      name: Interval
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Agent implements the Upwind Agent DaemonSet within a Kubernetes
          cluster
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AgentSpec defines the desired state of Agent Component
            properties:
              agentSecretRef:
                description: Defines a reference to the Secret in the Namespace used
                  by the agent to communicate with the Upwind Platform. This secret
                  is created by the Upwind Operator.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              helm:
                description: "HelmSpec defines common parameters used by the HelmInstaller
                  to manage configuring this component. \n public. Until then, this
                  is required so the user (or our upwind-operator installation chart)
                  sets the registrySecretRef."
                properties:
                  registrySecretRef:
                    description: "RegistrySecretRef identifes a Secret that can be
                      used to access the OCI registry if it protected buy authentication.
                      \n Valid Secret Types are: corev1.SecretTypeDockerConfigJson
                      corev1.SecretTypeBasicAuth \n then, this is required so the
                      user (or our upwind-operator installation chart) sets the registrySecretRef."
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  timeout:
                    default: 15m
                    description: Timeout is the time to wait for any individual Kubernetes
                      operation during the performance of a reconciliation request.
                    type: string
                  values:
                    description: Values allows any custom values to be passed to the
                      underlying helm chart supporting this component.
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - registrySecretRef
                type: object
              imagePullSecretRef:
                description: Defines a reference to the Secret in the Namespace used
                  by Kubernetes nodes to pull down the Agent images from the secure
                  OCI repository. This secret is cretaed by the Upwind Operator.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              interval:
                default: 1h
                description: Interval at which to reconcile the Agent.
                type: string
              version:
                default: '*'
                description: Version is a SemVer 2 conformant version string.
                type: string
            required:
            - agentSecretRef
            - helm
            - imagePullSecretRef
            type: object
          status:
            description: ComponentStatus represents the current state of an installed
              component.
            properties:
              conditions:
                description: Conditions holds the conditions for the Runtime.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              installedAppVersion:
                description: InstalledAppVersion holds the current version of the
                  application itself - typically this is the tag that will be used
                  for the image being installed by the Component.
                type: string
              installedConfig:
                description: InstalledConfig holds a copy of the configuration for
                  the component - as generated and applied by the operator itself.
                  This is the final rendered configuration. This is useful for debugging
                  purposes.
                type: string
              installedVersion:
                description: InstalledVersion holds the current version of the installation
                  configuration - typically this is the version of the underlying
                  chart that backs the Component.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: clusteragents.components.upwind.io
spec:
  group: components.upwind.io
  names:
    categories:
    - upwind
    kind: ClusterAgent
    listKind: ClusterAgentList
    plural: clusteragents
    shortNames:
    - clusteragent
    - ca
    singular: clusteragent
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.version
      name: DesiredVersion
      type: string
    - jsonPath: .status.installedVersion
      name: InstalledVersion
      type: string
    - jsonPath: .status.installedAppVersion
      name: AppVersion
      type: string
    - jsonPath: .spec.interval
      name: Interval
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterAgent implements the Upwind Cluster Agent within a Kubernetes
          cluster
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterAgentSpec defines the desired state of Agent Component
            properties:
              clusterAgentSecretRef:
                description: Defines a reference to the Secret in the Namespace used
                  by the agent to communicate with the Upwind Platform. This secret
                  is created by the Upwind Operator.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              helm:
                description: "HelmSpec defines common parameters used by the HelmInstaller
                  to manage configuring this component. \n then, this is required
                  so the user (or our upwind-operator installation chart) sets the
                  registrySecretRef."
                properties:
                  registrySecretRef:
                    description: "RegistrySecretRef identifes a Secret that can be
                      used to access the OCI registry if it protected buy authentication.
                      \n Valid Secret Types are: corev1.SecretTypeDockerConfigJson
                      corev1.SecretTypeBasicAuth \n then, this is required so the
                      user (or our upwind-operator installation chart) sets the registrySecretRef."
                    properties:
                      name:
                        description: name is unique within a namespace to reference
                          a secret resource.
                        type: string
                      namespace:
                        description: namespace defines the space within which the
                          secret name must be unique.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  timeout:
                    default: 15m
                    description: Timeout is the time to wait for any individual Kubernetes
                      operation during the performance of a reconciliation request.
                    type: string
                  values:
                    description: Values allows any custom values to be passed to the
                      underlying helm chart supporting this component.
                    x-kubernetes-preserve-unknown-fields: true
                required:
                - registrySecretRef
                type: object
              imagePullSecretRef:
                description: Defines a reference to the Secret in the Namespace used
                  by Kubernetes nodes to pull down the Agent images from the secure
                  OCI repository. This secret is cretaed by the Upwind Operator.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              interval:
                default: 1h
                description: Interval at which to reconcile the Agent.
                type: string
              version:
                default: '*'
                description: Version is a SemVer 2 conformant version string.
                type: string
            required:
            - clusterAgentSecretRef
            - helm
            - imagePullSecretRef
            type: object
          status:
            description: ComponentStatus represents the current state of an installed
              component.
            properties:
              conditions:
                description: Conditions holds the conditions for the Runtime.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              installedAppVersion:
                description: InstalledAppVersion holds the current version of the
                  application itself - typically this is the tag that will be used
                  for the image being installed by the Component.
                type: string
              installedConfig:
                description: InstalledConfig holds a copy of the configuration for
                  the component - as generated and applied by the operator itself.
                  This is the final rendered configuration. This is useful for debugging
                  purposes.
                type: string
              installedVersion:
                description: InstalledVersion holds the current version of the installation
                  configuration - typically this is the version of the underlying
                  chart that backs the Component.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

